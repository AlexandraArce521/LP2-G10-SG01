#include <iostream>
#include <vector>
#include <cstdlib>
#include <ctime>
using namespace std;

// CLASE AUTO - CARACTERISTICAS DEL AUTO (NIVEL)
class Auto {
public:
    int velocidadJugador;
        int velocidadCompu;  
        
    void nivelDificult(int opcDifi) {

        
        switch (opcDifi) {
            case 1:
                velocidadJugador = (rand() % 14 + 3) * 5;
                cout << "\nLa velocidad del vehículo (JUGADOR) en dificultad fácil es: " << velocidadJugador << " km/h" << endl;
                
                velocidadCompu = (velocidadJugador - 5);
                cout << "\nLa velocidad del vehículo (COMPUTADORA) es: " << velocidadCompu << " Km/h" << endl;
                
                break;
                
            case 2:
                velocidadJugador = (rand() % 10 + 3) * 5;
                cout << "\nLa velocidad del vehículo (JUGADOR) en dificultad media es: " << velocidadJugador << " km/h" << endl;
                
                velocidadCompu = (rand() % 10 + 3) * 5;
                cout << "\nLa velocidad del vehículo (COMPUTADORA) es: " << velocidadCompu << " Km/h" << endl;
                
                break;
                
            case 3:
            
            // EL JUGADOR SOLO GANARA SI OBTIENE LA VELOCIDAD CERCA O 80 KM/H
                velocidadJugador = (rand() % 14 + 3) * 5;
                cout << "\nLa velocidad del vehículo (JUGADOR) en dificultad pro es: " << velocidadJugador << " km/h" << endl;
                
                velocidadCompu = min(80, velocidadJugador + 5);
                cout << "\nLa velocidad del vehículo (COMPUTADORA) es: " << velocidadCompu << " Km/h\n" << endl;
                
                break;
                
            default:
                cout << "Dificultad no válida." << endl;
                break;
        }
    }
};

class miCarrera {
    private:
    
    string nombreJugador, nombre;
    float tiempoCompu, tiempoJugador;
    int opcDistance, distancia;
    int velocidadJugador, velocidadCompu;
    
    public:
    
    miCarrera (int distancia, string nombre)    {
        opcDistance = distancia;        
        tiempoCompu = tiempoJugador= 0;
        nombreJugador = nombre;
    }
    
    void Carrera (Auto &miAuto)  {
        
        this->tiempoJugador = (opcDistance * 1.0 / miAuto.velocidadJugador);
        this->tiempoCompu = (opcDistance * 1.0 / miAuto.velocidadCompu);

        
        if (tiempoJugador < tiempoCompu)    {
            
            cout <<"\nEl jugador hizo un tiempo de: " << tiempoJugador;
            cout <<"\nLa computadora hizo un tiempo de: "<< tiempoCompu;
            cout <<"\nEl ganador es: " << nombreJugador <<"!\n"<<endl;  
        } 
        
        else if (tiempoCompu == tiempoJugador)    {
            cout <<"\nEl jugador hizo un tiempo de: "<< tiempoJugador;
            cout <<"\nLa computadora hizo un tiempo de: "<< tiempoCompu;
            cout <<"\nEs un empate!" << endl;
        } 
        
        else if (tiempoJugador > tiempoCompu)   {
            cout <<"\nLa computadora hizo un tiempo de: "<< tiempoCompu;
            cout <<"\nEl jugador hizo un tiempo de: " << tiempoJugador;
            cout << "\nEl ganador es: La computadora"<<"\nIntentalo la proxima vez!"<<endl;  
        } else  {
            cout << "Ganador no determinado!. Lo sentimos" << endl;
        }
    }
};


int obtenerOpcionValida(const string &mensaje, vector<int> opciones) {
    int opcion;
    while (true) {
        cout << mensaje;
        cin >> opcion;
        for (int op : opciones) {
            if (opcion == op) {
                cout << endl;
                return opcion;
            }
        }
        cout << "Opción no válida. Intente de nuevo.\n\n";
    }
}

int main() {
    srand(static_cast<unsigned int>(time(0)));
    
    string nombreJugador;
    cout << "----- JUEGO DE CARRERAS -----" << endl;
    cout << "Nombre del JUGADOR: ";
    cin >> nombreJugador;
    cout << "Bienvenido, " << nombreJugador << "!\n" << endl;

    int opcDistance = obtenerOpcionValida("Elija la distancia de la carrera\n(Escriba 50, 100 o 150)\n\n1. 50m\n2. 100m\n3. 150m\nSeleccione: ", {50, 100, 150});
    int opcDifi = obtenerOpcionValida("Elija la dificultad\n(Elija 1, 2 o 3)\n\n1. Fácil\n2. Medio\n3. Pro\nSeleccione: ", {1, 2, 3});

    cout << "Distancia de la carrera: " << opcDistance << " metros." << endl;
    cout << "Nivel de dificultad: " << (opcDifi == 1 ? "Fácil" : (opcDifi == 2 ? "Medio" : "Pro")) << endl;
    
    // CREAR OBJETO
    Auto autos;
    // LLAMAR AL MÉTODO "nivel de la dificultad" - A mayor dificultad menor velocidad
    autos.nivelDificult(opcDifi);
    
    miCarrera carrera(opcDistance, nombreJugador);
    carrera.Carrera(autos);
    
    return 0;
